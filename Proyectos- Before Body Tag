<!-- Código para Before </body> Tag ACTUALIZADO -->
<style>
  /* ----------------------------------
    Estilos base del mapa 
  ---------------------------------- */
  #map {
    width: 100%;
    height: 80vh;
    position: relative;
    border-radius: 0 !important;
  }

  .map-container {
    position: relative !important;
    overflow: hidden !important;
    width: 100% !important;
    height: 80vh !important;
  }

  /* Overlay de instrucciones */
  .zoom-instruction {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.2);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1;
    pointer-events: none;
    user-select: none;
    border-radius: inherit;
    box-sizing: border-box;
  }

  .zoom-instruction span {
    color: white;
    font-family: Arial, sans-serif;
    font-size: 18px;
    text-align: center;
    line-height: 1.4;
    max-width: 80%;
    padding: 15px;
    background: rgba(0,0,0,0.7);
    border-radius: 8px;
  }

  @media (max-width: 767px) {
    .zoom-instruction span {
      font-size: 16px;
      padding: 12px;
    }
  }
</style>

<script src="https://api.tiles.mapbox.com/mapbox-gl-js/v3.9.4/mapbox-gl.js"></script>
<link href="https://api.tiles.mapbox.com/mapbox-gl-js/v3.9.4/mapbox-gl.css" rel="stylesheet">

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

    mapboxgl.accessToken = 'pk.eyJ1IjoiZmFuYXdhdmUiLCJhIjoiY201cXBqMmx3MDJpZTJqcXhraHhmZzhtMyJ9.LFpDN7Mn8TLycK0t9MwWwg';

    const mapOptions = {
      container: 'map',
      style: 'mapbox://styles/fanawave/cm5qw161000ke01s36om35ts9',
      center: [-75.172239, -8.898636],
      zoom: 4.72,
      antialias: true,
      scrollZoom: false, // Se desactiva inicialmente, se configura abajo según el dispositivo
      cooperativeGestures: true, // Activa los gestos cooperativos nativos de Mapbox
    };

    const map = new mapboxgl.Map(mapOptions);

    // Habilitar la funcionalidad nativa para escritorio y móvil
    if (!isTouchDevice) {
      // Configurar reglas específicas para escritorio
      map.scrollZoom.enable(); // Reactivar scroll con zoom en escritorio
    }

    // Asegurar que el mapa responda al redimensionamiento
    window.addEventListener('resize', () => map.resize());

    // Configurar los popups y eventos del mapa
    map.on('load', () => {
      map.on('click', 'idelcom-projects', (event) => {
        const features = map.queryRenderedFeatures(event.point, { layers: ['idelcom-projects'] });
        if (!features.length) return;

        const feature = features[0];
        const mapHeight = map.getCanvas().clientHeight;
        const popupOffset = event.point.y < mapHeight / 2 ? { bottom: [0, -35] } : { top: [0, 15] };

        new mapboxgl.Popup({ offset: popupOffset, closeButton: true })
          .setLngLat(feature.geometry.coordinates)
          .setHTML(
            `<div class="popup-content">
              <h3>${feature.properties.name}</h3>
              ${feature.properties.imagen_url ? `<img src="${feature.properties.imagen_url}" alt="${feature.properties.name}">` : ''}
              <p>${feature.properties.description}</p>
              ${feature.properties.enlace_proyecto ? `<a href="${feature.properties.enlace_proyecto}" class="popup-button" target="_blank">Ver Proyecto</a>` : ''}
            </div>`
          )
          .addTo(map);
      });

      map.on('mouseenter', 'idelcom-projects', () => map.getCanvas().style.cursor = 'pointer');
      map.on('mouseleave', 'idelcom-projects', () => map.getCanvas().style.cursor = '');
    });
  });
</script>
